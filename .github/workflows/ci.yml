name: Go CI
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Install GoReleaser v0.123.3
      run: |
        goreleaserdir=$(mktemp -d)
        cd "$goreleaserdir"
        wget -O - https://github.com/goreleaser/goreleaser/releases/download/v0.123.3/goreleaser_Linux_x86_64.tar.gz | tar -z --extract goreleaser
        echo "::add-path::$goreleaserdir"

    - name: Install go-swagger v0.21.0
      run: |
        swaggerdir=$(mktemp -d)
        cd "$swaggerdir"
        wget -O swagger https://github.com/go-swagger/go-swagger/releases/download/v0.21.0/swagger_linux_amd64
        chmod +x swagger
        echo "::add-path::$swaggerdir"

    - name: Change directory
      run: |
        WORKDIR="${HOME}/go/src/github.com/${GITHUB_REPOSITORY}"

        # Go can only find dependencies if they're under $GOPATH/src.
        # GitHub Actions mounts your repository outside of $GOPATH.
        # So symlink the repository into $GOPATH, and then cd to it.
        mkdir -p "$(dirname "${WORKDIR}")"
        ln -s "${PWD}" "${WORKDIR}"
        cd "${WORKDIR}"

    - name: GoReleaser snapshot run (generates client code from Swagger spec; fetches dependencies)
      run: goreleaser -f .goreleaser-ci.yml --snapshot

    - name: Test
      run: go test -v -race ./...

    - name: Test version command
      # we do NOT want to find ??? (hence the ! operator, defined in posix)
      run: "! ./dist/fyde-cli_linux_amd64/fyde-cli version | grep -q ???"

    - name: Lint
      run: go vet ./...

    - name: Upload binary to bintray
      uses: gbl08ma/github-action-upload-bintray@master
      with:
        file: ./dist/fyde-cli_linux_amd64/fyde-cli
        api_user: gbl08ma
        api_key: ${{ secrets.BINTRAY_API_KEY }}
        repository_user: fyde
        repository: fyde-cli
        package: fyde-cli
        version: ${{ github.sha }}
        upload_path: snapshot
        publish: 1
        calculate_metadata: false
