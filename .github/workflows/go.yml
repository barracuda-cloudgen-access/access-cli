name: Go
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Install govvv
      run: go install github.com/ahmetb/govvv

    - name: Install go-swagger 5499abf2a8c86a57f3a8112aca47a624f609689e
      run: |
        swaggerdir=$(mktemp -d) 
        git clone https://github.com/go-swagger/go-swagger "$swaggerdir" 
        cd "$swaggerdir"
        git checkout 5499abf2a8c86a57f3a8112aca47a624f609689e
        go install ./cmd/swagger
    
    - name: Change directory
      run: |
        WORKDIR="${HOME}/go/src/github.com/${GITHUB_REPOSITORY}"

        # Go can only find dependencies if they're under $GOPATH/src.
        # GitHub Actions mounts your repository outside of $GOPATH.
        # So symlink the repository into $GOPATH, and then cd to it.
        mkdir -p "$(dirname "${WORKDIR}")"
        ln -s "${PWD}" "${WORKDIR}"
        cd "${WORKDIR}"
      
    - name: Generate client code from swagger specification
      run: |
        "${HOME}/go/bin/swagger" generate client -f swagger.yml

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: |
        "${HOME}/go/bin/govvv" build -v .

    - name: Test
      run: go test -v -race ./...

    - name: Test version command
      # we do NOT want to find ??? (hence the ! operator, defined in posix)
      run: "! ./fyde-cli version | grep -q ???"
    
    - name: Lint
      run: go vet ./...
