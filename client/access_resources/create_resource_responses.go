// Code generated by go-swagger; DO NOT EDIT.

package access_resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/oNaiPs/fyde-cli/models"
)

// CreateResourceReader is a Reader for the CreateResource structure.
type CreateResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateResourceCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateResourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateResourceCreated creates a CreateResourceCreated with default headers values
func NewCreateResourceCreated() *CreateResourceCreated {
	return &CreateResourceCreated{}
}

/*CreateResourceCreated handles this case with default header values.

Resource created
*/
type CreateResourceCreated struct {
	Payload *models.AccessResource
}

func (o *CreateResourceCreated) Error() string {
	return fmt.Sprintf("[POST /access_resources][%d] createResourceCreated  %+v", 201, o.Payload)
}

func (o *CreateResourceCreated) GetPayload() *models.AccessResource {
	return o.Payload
}

func (o *CreateResourceCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccessResource)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateResourceUnauthorized creates a CreateResourceUnauthorized with default headers values
func NewCreateResourceUnauthorized() *CreateResourceUnauthorized {
	return &CreateResourceUnauthorized{}
}

/*CreateResourceUnauthorized handles this case with default header values.

unauthorized: invalid credentials or missing authentication headers
*/
type CreateResourceUnauthorized struct {
	Payload *models.GenericUnauthorizedResponse
}

func (o *CreateResourceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /access_resources][%d] createResourceUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateResourceUnauthorized) GetPayload() *models.GenericUnauthorizedResponse {
	return o.Payload
}

func (o *CreateResourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericUnauthorizedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateResourceBody create resource body
swagger:model CreateResourceBody
*/
type CreateResourceBody struct {

	// access resource
	AccessResource *CreateResourceParamsBodyAccessResource `json:"access_resource,omitempty"`
}

// Validate validates this create resource body
func (o *CreateResourceBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccessResource(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateResourceBody) validateAccessResource(formats strfmt.Registry) error {

	if swag.IsZero(o.AccessResource) { // not required
		return nil
	}

	if o.AccessResource != nil {
		if err := o.AccessResource.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("resource" + "." + "access_resource")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateResourceBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateResourceBody) UnmarshalBinary(b []byte) error {
	var res CreateResourceBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateResourceParamsBodyAccessResource create resource params body access resource
swagger:model CreateResourceParamsBodyAccessResource
*/
type CreateResourceParamsBodyAccessResource struct {

	// access policy ids
	AccessPolicyIds []int64 `json:"access_policy_ids"`

	// access policy name
	AccessPolicyName string `json:"access_policy_name,omitempty"`

	// access proxy id
	// Format: uuid
	AccessProxyID strfmt.UUID `json:"access_proxy_id,omitempty"`

	// access proxy name
	AccessProxyName string `json:"access_proxy_name,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// internal host
	InternalHost string `json:"internal_host,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// notes
	Notes string `json:"notes,omitempty"`

	// ports
	Ports []string `json:"ports"`

	// public host
	PublicHost string `json:"public_host,omitempty"`
}

// Validate validates this create resource params body access resource
func (o *CreateResourceParamsBodyAccessResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAccessProxyID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateResourceParamsBodyAccessResource) validateAccessProxyID(formats strfmt.Registry) error {

	if swag.IsZero(o.AccessProxyID) { // not required
		return nil
	}

	if err := validate.FormatOf("resource"+"."+"access_resource"+"."+"access_proxy_id", "body", "uuid", o.AccessProxyID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateResourceParamsBodyAccessResource) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateResourceParamsBodyAccessResource) UnmarshalBinary(b []byte) error {
	var res CreateResourceParamsBodyAccessResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
