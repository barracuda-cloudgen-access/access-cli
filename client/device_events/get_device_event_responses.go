// Code generated by go-swagger; DO NOT EDIT.

package device_events

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/oNaiPs/fyde-cli/models"
)

// GetDeviceEventReader is a Reader for the GetDeviceEvent structure.
type GetDeviceEventReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeviceEventReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeviceEventOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDeviceEventUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeviceEventNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDeviceEventOK creates a GetDeviceEventOK with default headers values
func NewGetDeviceEventOK() *GetDeviceEventOK {
	return &GetDeviceEventOK{}
}

/*GetDeviceEventOK handles this case with default header values.

Event info
*/
type GetDeviceEventOK struct {
	Payload *models.DeviceEvent
}

func (o *GetDeviceEventOK) Error() string {
	return fmt.Sprintf("[GET /device_events/{id}][%d] getDeviceEventOK  %+v", 200, o.Payload)
}

func (o *GetDeviceEventOK) GetPayload() *models.DeviceEvent {
	return o.Payload
}

func (o *GetDeviceEventOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeviceEvent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceEventUnauthorized creates a GetDeviceEventUnauthorized with default headers values
func NewGetDeviceEventUnauthorized() *GetDeviceEventUnauthorized {
	return &GetDeviceEventUnauthorized{}
}

/*GetDeviceEventUnauthorized handles this case with default header values.

unauthorized: invalid credentials or missing authentication headers
*/
type GetDeviceEventUnauthorized struct {
	Payload *models.GenericUnauthorizedResponse
}

func (o *GetDeviceEventUnauthorized) Error() string {
	return fmt.Sprintf("[GET /device_events/{id}][%d] getDeviceEventUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDeviceEventUnauthorized) GetPayload() *models.GenericUnauthorizedResponse {
	return o.Payload
}

func (o *GetDeviceEventUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericUnauthorizedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeviceEventNotFound creates a GetDeviceEventNotFound with default headers values
func NewGetDeviceEventNotFound() *GetDeviceEventNotFound {
	return &GetDeviceEventNotFound{}
}

/*GetDeviceEventNotFound handles this case with default header values.

Proxy not found
*/
type GetDeviceEventNotFound struct {
}

func (o *GetDeviceEventNotFound) Error() string {
	return fmt.Sprintf("[GET /device_events/{id}][%d] getDeviceEventNotFound ", 404)
}

func (o *GetDeviceEventNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
