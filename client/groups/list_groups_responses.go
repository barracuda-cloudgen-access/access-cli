// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/oNaiPs/fyde-cli/models"
)

// ListGroupsReader is a Reader for the ListGroups structure.
type ListGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListGroupsOK creates a ListGroupsOK with default headers values
func NewListGroupsOK() *ListGroupsOK {
	return &ListGroupsOK{}
}

/*ListGroupsOK handles this case with default header values.

successful operation
*/
type ListGroupsOK struct {
	/*Total number of items (for pagination)
	 */
	Total int64

	Payload []*ListGroupsOKBodyItems0
}

func (o *ListGroupsOK) Error() string {
	return fmt.Sprintf("[GET /groups][%d] listGroupsOK  %+v", 200, o.Payload)
}

func (o *ListGroupsOK) GetPayload() []*ListGroupsOKBodyItems0 {
	return o.Payload
}

func (o *ListGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header total
	total, err := swag.ConvertInt64(response.GetHeader("total"))
	if err != nil {
		return errors.InvalidType("total", "header", "int64", response.GetHeader("total"))
	}
	o.Total = total

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListGroupsUnauthorized creates a ListGroupsUnauthorized with default headers values
func NewListGroupsUnauthorized() *ListGroupsUnauthorized {
	return &ListGroupsUnauthorized{}
}

/*ListGroupsUnauthorized handles this case with default header values.

unauthorized: invalid credentials or missing authentication headers
*/
type ListGroupsUnauthorized struct {
	Payload *models.GenericUnauthorizedResponse
}

func (o *ListGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /groups][%d] listGroupsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListGroupsUnauthorized) GetPayload() *models.GenericUnauthorizedResponse {
	return o.Payload
}

func (o *ListGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericUnauthorizedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ListGroupsOKBodyItems0 list groups o k body items0
swagger:model ListGroupsOKBodyItems0
*/
type ListGroupsOKBodyItems0 struct {
	models.Group

	// total users
	TotalUsers *ListGroupsOKBodyItems0AO1TotalUsers `json:"total_users,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *ListGroupsOKBodyItems0) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 models.Group
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	o.Group = aO0

	// AO1
	var dataAO1 struct {
		TotalUsers *ListGroupsOKBodyItems0AO1TotalUsers `json:"total_users,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	o.TotalUsers = dataAO1.TotalUsers

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o ListGroupsOKBodyItems0) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(o.Group)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		TotalUsers *ListGroupsOKBodyItems0AO1TotalUsers `json:"total_users,omitempty"`
	}

	dataAO1.TotalUsers = o.TotalUsers

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this list groups o k body items0
func (o *ListGroupsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.Group
	if err := o.Group.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTotalUsers(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListGroupsOKBodyItems0) validateTotalUsers(formats strfmt.Registry) error {

	if swag.IsZero(o.TotalUsers) { // not required
		return nil
	}

	if o.TotalUsers != nil {
		if err := o.TotalUsers.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("total_users")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListGroupsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListGroupsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res ListGroupsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListGroupsOKBodyItems0AO1TotalUsers list groups o k body items0 a o1 total users
swagger:model ListGroupsOKBodyItems0AO1TotalUsers
*/
type ListGroupsOKBodyItems0AO1TotalUsers struct {

	// enrolled
	Enrolled int64 `json:"enrolled,omitempty"`

	// pending
	Pending int64 `json:"pending,omitempty"`

	// unenrolled
	Unenrolled int64 `json:"unenrolled,omitempty"`
}

// Validate validates this list groups o k body items0 a o1 total users
func (o *ListGroupsOKBodyItems0AO1TotalUsers) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListGroupsOKBodyItems0AO1TotalUsers) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListGroupsOKBodyItems0AO1TotalUsers) UnmarshalBinary(b []byte) error {
	var res ListGroupsOKBodyItems0AO1TotalUsers
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
